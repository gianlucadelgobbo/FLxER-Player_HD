package VJTV {	import flash.display.Sprite;	import flash.display.Loader;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.events.*;	import flash.ui.ContextMenu;	import flash.ui.ContextMenuItem;    import flash.ui.ContextMenuBuiltInItems;	import flash.ui.Keyboard;    import flash.ui.Mouse;	import flash.geom.Rectangle;	import flash.geom.ColorTransform;	import flash.utils.*;	import flash.net.navigateToURL;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.printing.PrintJob;	import flash.system.Security;	import flash.external.*;	import fl.transitions.*;	import fl.transitions.easing.*;	import VJTV.VJTVChCtrl;	import VJTV.VJTVDett;	import FLxER.comp.ButtonTxt;	public class VJTVInterface extends Sprite {		var myTween;		var myTween2;		var myTween3;		var myTween4;		var mL;		public var chCnt:Object;		var c		/*		public var myEmbed		var tipo		var single		var myKeyL;		var noImg;		var t		*/		public var menuIsClose		var autoHide		var myLoading:VJTVLoading		public var myToolbar:Toolbar2;		public var myloaded;		var dett:VJTVDett;		var sottopanciaOk;		public var firstPlay		public var out=true;		public function VJTVInterface():void {			this.myLoading = new VJTVLoading();			Preferences.pref.interfaceTrgt = this;			Preferences.pref.nLoadErr = new Object();			myToolbar = new Toolbar2();			chCnt = new VJTVChCtrl(Preferences.pref.h-myToolbar.piede.piedeEst.height);			menuIsClose = true			autoHide = false			this.addChild(chCnt);			this.addChild(myToolbar);			Preferences.pref.monitorTrgt.avvia(this)			//Preferences.pref.monitorTrgt.mbuto((getTimer()-Preferences.pref.lastTime)+",HIDE,1");			trace(Preferences.pref.libraryList.childNodes[0].attributes.highLightsBkg)			Preferences.pref.monitorTrgt.mbuto((getTimer()-Preferences.pref.lastTime)+",loadMedia,0,"+Preferences.pref.libraryList.childNodes[0].attributes.highLightsBkg+",swf,100");			dett = new VJTVDett(showInfo,chCnt.loaderLibStr);			dett.alpha = 0;			//			setPos();		}		public function showInfo(xml,a):void {			if (this.contains(dett)) {				myTween4 = new Tween(dett,"alpha",Strong.easeOut,dett.alpha,0,2,true);				myTween4.addEventListener(TweenEvent.MOTION_FINISH, removeInfo);			} else {				dett.riempi(xml,a)				this.addChild(dett);				myTween4 = new Tween(dett,"alpha",Strong.easeOut,dett.alpha,1,2,true);			}		}		public function removeInfo(e) {			dett.svuota()			this.removeChild(dett);		}		public function startHideToolbarNow() {			autoHide = true;			trace("hideToolbar"+Preferences.pref.toolbarBottom);			if (Preferences.pref.toolbarBottom == false && menuIsClose) {				hideToolbar();				if (!this.hasEventListener(MouseEvent.MOUSE_MOVE)) this.addEventListener(MouseEvent.MOUSE_MOVE, showToolbarAndHide);			}		}		function startHideToolbar() {			clearInterval(mL);			mL = setInterval(hideToolbar,3000);			if (!this.hasEventListener(MouseEvent.MOUSE_MOVE)) this.addEventListener(MouseEvent.MOUSE_MOVE, showToolbarAndHide);		}		function hideToolbar() {			clearInterval(mL);			myTween = new Tween(myToolbar.piede,"alpha",Strong.easeOut,myToolbar.piede.alpha,0,2,true);			myTween2 = new Tween(chCnt,"alpha",Strong.easeOut,chCnt.alpha,0,2,true);		}		function showToolbar() {			clearInterval(mL);			myTween = new Tween(myToolbar.piede,"alpha",Strong.easeOut,myToolbar.piede.alpha,1,1,true);			myTween2 = new Tween(chCnt,"alpha",Strong.easeOut,chCnt.alpha,1,1,true);			if (myToolbar.piede.alpha  == 0) {			}		}		public function startLoading() {			if (!this.contains(myLoading)) this.addChild(myLoading);			myToolbar.disable();		}		public function stopLoading() {			/*			trace("stopLoading"+this.contains(myLoading));			trace("stopLoading"+Preferences.pref.interfaceTrgt.myloaded);			trace("stopLoading"+Preferences.pref.monitorTrgt.myStarted);			*/			if (this.contains(myLoading) && Preferences.pref.interfaceTrgt.myloaded) {				this.removeChild(myLoading);				myToolbar.enable();			}		}		function showToolbarAndHide(e) {			showToolbar()			startHideToolbar()		}		function apriMenu(event) {			if (menuIsClose) {				menuIsClose = false				if (this.hasEventListener(MouseEvent.MOUSE_MOVE)) this.removeEventListener(MouseEvent.MOUSE_MOVE, showToolbarAndHide);				clearInterval(mL);				showToolbar()				myTween3 = new Tween(chCnt,"y",Strong.easeOut,chCnt.y,chCnt.myY,2,true);			} else {				menuIsClose = true;				if (autoHide) startHideToolbarNow();				myTween3 = new Tween(chCnt,"y",Strong.easeOut,chCnt.y,Preferences.pref.h-30-32,2,true);			}		}		public function setPos() {			chCnt.setPos();			myLoading.setPos();			myToolbar.setPos();		}		//		public function onMetaDataFLV(info:Object,ch:uint):void {			trace("onMetaDataFLV")		}		public function hideSottopancia() {			Preferences.pref.monitorTrgt.mbuto((getTimer()-Preferences.pref.lastTime)+",HIDE,1");			clearInterval(c);			c = setInterval(showSottopancia, 60000);		}		public function showSottopancia() {			Preferences.pref.monitorTrgt.levels["ch_"+1].swfLoader.content.parti();			Preferences.pref.monitorTrgt.mbuto((getTimer()-Preferences.pref.lastTime)+",SHOW,1");			clearInterval(c);			c = setInterval(hideSottopancia, 5000);		}		public function initHandlerSWF(e:Loader,ch:uint):void {			sottopanciaOk = true;			/*if (!sottopanciaOk) {				Preferences.pref.monitorTrgt.mbuto((getTimer()-Preferences.pref.lastTime)+",loadMedia,2,"+"http://www.vjtelevision.com/_swf/sottopancia.swf"+",swf,100");				Preferences.pref.monitorTrgt.levels["ch_"+1].swfLoader.content.avvia(showInfo);				sottopanciaOk = true;				//chCnt.loaderLib("0");			}*/			trace("initHandlerSWFinitHandlerSWFinitHandlerSWFinitHandlerSWFinitHandlerSWF")		}		public function myLoadInt():void {			trace("myLoadInt")			clearInterval(c)			chCnt.myLoad(Preferences.pref.currentMedia);		}		public function initHandlerFLV(event:Event,ch:uint):void {			trace(event.info.code)			if (event.info.code == "NetStream.Play.Stop") {				Preferences.pref.monitorTrgt.levels["ch_"+0].myDuration = undefined;				Preferences.pref.currentMedia++;				if (Preferences.pref.currentMedia>chCnt.myFileList.childNodes[0].childNodes) Preferences.pref.currentMedia = 0;				firstPlay = true;				c = setInterval(myLoadInt,500);				//chCnt.updatePage();			}			if (event.info.code == "NetStream.Buffer.Full") {				if (firstPlay) {					firstPlay = false;					Preferences.pref.monitorTrgt.myStarted = true;					stopLoading();					startHideToolbarNow()				}			}			if (event.info.code == "NetStream.Play.Start") {				//showSottopancia();				if (!hasEventListener(Event.ENTER_FRAME)) {					Preferences.pref.tipo = "flv";					myToolbar.avvia_indice()				}				stopLoading();				Preferences.pref.monitorTrgt.levels["ch_"+0].myStopStatus = false;				myToolbar.piede.contr.playpause.simb.gotoAndStop(2);			}			if (event.info.code == "NetStream.Play.StreamNotFound" || event.info.code == "NetStream.Play.FileStructureInvalid"|| event.info.code == "NetStream.Play.NoSupportedTrackFound") {			}		}		public function load_prev_foto() {			chCnt.load_prev_foto()		}		public function load_next_foto() {			chCnt.load_next_foto()		}		public function initHandlerMP3(ch:uint):void {		}		public function initHandlerJPG(e:Loader,ch:uint):void {					firstPlay = false;					Preferences.pref.monitorTrgt.myStarted = true;					stopLoading();					startHideToolbarNow()					chCnt.initHandlerJPG()		}		public function errorHandlerCNT(event:Event,ch:uint):void {			trace("errorHandlerCNT "+ch)		}		public function errorHandlerSWF(event:Event,ch:uint):void {			errorHandlerCNT(event,ch);		}		public function errorHandlerMP3(event:Event,ch:uint):void {			errorHandlerCNT(event,ch);		}		public function errorHandlerJPG(event:Event,ch:uint):void {			errorHandlerCNT(event,ch);			//trace("errorHandlerJPG "+Preferences.pref.currentMedia["ch_"+ch])		}		public function errorHandlerWipes(event:Event, ch:uint):void {		}	}}