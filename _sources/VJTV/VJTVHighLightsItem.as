package VJTV {	import flash.display.Sprite;	import flash.display.Loader;	import flash.events.*;	import flash.net.URLRequest;	import FLxER.main.Rett;	import FLxER.main.Txt;	import FLxER.comp.ButtonTxt	import fl.transitions.*;	import fl.transitions.easing.*;	public class VJTVHighLightsItem extends Sprite {		var myTweenOn:Tween;		var myTweenOff:Tween;		var w:uint;		public var tit,dat,dur,aut,txt,cat,tag		var fondino,fond,imgLoader, fnz,fnzMore,n,img,loadingProgress,myXml,more		public function VJTVHighLightsItem(xx,yy,ww,f,ff):void {			this.alpha = 0;			fnz = f;			fnzMore = ff;			y=yy;			x=xx;			w=ww;			trace(xx+" - "+yy)			fondino = new Rett(0, 0, ww, 300, 0x000000, -1, .5);			this.addChild(fondino);			tit = new Txt(7, 100, (ww-20), 0, "", Preferences.pref.th, "");			tit.wordWrap = true;			//tit.scaleX=tit.scaleY = 2			this.addChild(tit);			txt = new Txt(7, 54, ww-20, 40, "", Preferences.pref.ts, "");			txt.wordWrap = true;			this.addChild(txt);			this.img = new Sprite();			img.x=img.y=10;			this.addChild(img);			fond = new Rett(0, 0, 128, 96, 0xFFFFFF, -1, .5);			img.addChild(fond);			this.imgLoader = new Loader();			imgLoader.contentLoaderInfo.addEventListener(Event.INIT, initHandlerSWF);			imgLoader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, errorHandlerSWF);			imgLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, errorHandlerSWF);			img.addChild(imgLoader);			more = new arrow2();			more.x = int((ww-more.width)/2)			more.y = 300-25			this.addChild(more);		}		public function showInfo(a):void {			fnzMore(myXml,n);		}		public function riempi(xml,nn):void {			n = nn;			myXml = xml;			if (myTweenOn) myTweenOn.stop(); 			if (myTweenOff) myTweenOff.stop(); 			fondino.alpha = 1;			if (n == Preferences.pref.currentMedia){				avviaOff(null)			}			/*			var myDateA = myXml.childNodes[1].childNodes[1].nodeValue.split(",");			var myDate = new Date(myDateA[0],myDateA[1],myDateA[2],myDateA[3],myDateA[4],myDateA[5]);			trace("dat "+myDate.getFullYear()+"-"+putZero(myDate.getMonth()+1)+"-"+putZero(myDate.getDate())+" "+putZero(myDate.getHours())+":"+putZero(myDate.getMinutes()));			dat.htmlText = myDate.getFullYear()+"-"+putZero(myDate.getMonth()+1)+"-"+putZero(myDate.getDate())+" "+putZero(myDate.getHours())+":"+putZero(myDate.getMinutes());			*/			/*			trace("img "+myXml.childNodes[2].childNodes[0])			trace("tit "+myXml.childNodes[1].childNodes[0])			trace("dat "+myXml.childNodes[1].childNodes[1].childNodes[0]);			trace("dur "+Preferences.pref.interfaceTrgt.myTime(myXml.childNodes[1].childNodes[2].childNodes[0]));			trace("txt "+myXml.childNodes[1].childNodes[3].childNodes[0])			trace("aut "+myXml.childNodes[1].childNodes[4].childNodes[0])			trace("cat "+myXml.childNodes[1].childNodes[5].childNodes[0])			trace("tag "+myXml.childNodes[1].childNodes[6].childNodes[0])			trace(this.tit)			*/			tit.htmlText = (myXml.childNodes[1].childNodes.length>7 ? myXml.childNodes[1].childNodes[7].childNodes[0]+" | " : "")+myXml.childNodes[1].childNodes[0]			txt.htmlText = myXml.childNodes[1].childNodes[3].childNodes[0];			imgLoader.load(new URLRequest(myXml.childNodes[2].childNodes[0].toString()));			loadingProgress = true;			//tag.htmlText = myXml.childNodes[3].childNodes[0];			setPos();		}		public function setPos():void {			if (imgLoader.width) {				fond.width = imgLoader.width = w - 20				imgLoader.scaleY = imgLoader.scaleX				fond.height = imgLoader.height				if (this.alpha == 0) {					myTweenOn = new Tween(this,"alpha",Strong.easeIn,0,1,1,true);				}			}			tit.y = imgLoader.height+13;			tit.height = tit.textHeight + 4;			txt.y = tit.y+tit.height+5+(tit.height > 40 ? -5 : 0);			txt.height = 300-txt.y -40					}		public function svuota():void {			if (myTweenOn) myTweenOn.stop(); 			if (myTweenOff) myTweenOff.stop(); 			fondino.alpha = 1;			tit.htmlText = dat.htmlText = dur.htmlText = aut.htmlText = txt.htmlText = cat.htmlText = "";			if (loadingProgress) {				imgLoader.close();			} else {				imgLoader.unload();			}		}		private function putZero(str):String {			return (str.toString().length < 2 ? "0"+str : str);		}		private function mouseDownHandler(event:Event):void {			fnz(n);		}		private function mouseOverHandler(event:Event):void {			more.alpha = img.alpha = .5;		}		private function mouseOutHandler(event:Event):void {			more.alpha = img.alpha = 1;		}		private function initHandlerSWF(event:Event):void {			setPos();						loadingProgress = false;			enable()		}		private function errorHandlerSWF(event:Event):void {			trace("error "+event)		}		public function enable() {			this.mouseChildren = false;			this.addEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			this.addEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			this.addEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			this.buttonMode=true;		}		public function disable() {			this.removeEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			this.removeEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			this.removeEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			this.buttonMode=false;			mouseOutHandler(null);		}	}}