package VJTV {	import flash.display.Sprite;	import flash.xml.XMLDocument;    import flash.utils.getTimer;	import FLxER.main.Txt;	import FLxER.comp.ButtonTxt;	import VJTV.VJTVListItem;	public class VJTVPostList extends Sprite {		var loaderLibStr:Function;		var listSprites:Array;		var listTit:Txt		var listN:uint;		var prev:ButtonTxt;		var succ:ButtonTxt;		var pages:Txt		var page:uint;		var myFileList:XMLDocument;		public function VJTVPostList(hh,f,ff):void {			myLoad = f;			loaderLibStr = ff;			Preferences.pref.listHeight = 290;			listSprites = new Array();			listTit = new Txt(7, 35, 500, 22, " ", Preferences.pref.th, "");			this.addChild(listTit);			succ = new ButtonTxt(Preferences.pref.w-40-10, hh-10, 40, 14, "SUCC", pager, 1, null);			this.addChild(succ);			prev = new ButtonTxt(Preferences.pref.w-40-10-40-10, hh-10, 40, 14, "PREC", pager, -1, null);			this.addChild(prev);			pages = new Txt(10, hh-10, 200, 11, "0 of 0 PAGINE",Preferences.pref.ts, "html");			this.addChild(pages);			setPos();		}		function pager(p:String):void {			page+=parseInt(p);			if (page<0) {				page = 0;			} else {				if (page>int(myFileList.childNodes[0].childNodes.length/listN)) page = int(myFileList.childNodes[0].childNodes.length/listN); 				setPage()			}		}		public function updatePage(xml) {			myFileList = xml;			page = int(Preferences.pref.currentMedia/listN);			setPage()		}		public function setPage() {			listTit.text = myFileList.childNodes[0].attributes.tit;			pages.text = (page+1)+ " of "+(int(myFileList.childNodes[0].childNodes.length/listN)+1)+" PAGINE"			for (var b=0;b<listN;b++){				if (b+(listN*page)<myFileList.childNodes[0].childNodes.length){					listSprites[b].riempi(myFileList.childNodes[0].childNodes[b+(listN*page)],b+(listN*page));				} else {					listSprites[b].svuota();				}			}		}		public function setPos():void {			var hh = Preferences.pref.listHeight;			x = 0;			h = int(int((hh-60)/110)*110)-10+60;			pages.y = succ.y = prev.y = h-3;			myY = int(Preferences.pref.h-Preferences.pref.interfaceTrgt.myToolbar.piede.piedeEst.height-Preferences.pref.listHeight);			listN = int((hh-60)/110)*2;			var oldListSprites = listSprites.length;			var listWidth = int((Preferences.pref.w-30)/2);			var listPos = [[0,0],[0,1],[1,0],[1,1]];			var a;			if (listN>oldListSprites) {				for (a=oldListSprites;a<listN;a++){					listSprites.push(new VJTVListItem((listPos[a][0]*(listWidth+10))+10, (listPos[a][1]*110)+55, listWidth, myLoad, Preferences.pref.interfaceTrgt.showInfo,loaderLibStr));					this.addChild(listSprites[a]);				}			} else if (listN<oldListSprites) {				for (a=oldListSprites-1;a>=listN;a--){					trace("rimuovi->"+a)					this.removeChild(listSprites[a]);					listSprites.pop();				}			}			if (myFileList is XMLDocument) setPage()		}	}}