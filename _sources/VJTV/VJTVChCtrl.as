package VJTV {	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.utils.*;	import flash.display.DisplayObjectContainer.*	import flash.geom.ColorTransform;	import flash.xml.XMLDocument;	import flash.net.*;	import flash.events.*;	import flash.display.Loader;    import flash.net.FileReference;	import fl.transitions.*;	import fl.transitions.easing.*;	import FLxER.main.Rett;	import FLxER.main.Txt;	import FLxER.comp.ButtonTxt;	import VJTV.VJTVListItem;	import VJTV.DatePicker;	import VJTV.comp.FotoSlider;	import VJTV.VJTVHighLightsItem;	import VJTV.VJTVComments;	import VJTV.VJTVPostList;	import tbtv.juventusmember.JuveApi;	public class VJTVChCtrl extends Sprite {		public var ch:Number;		//		var fondino:Rett;		var myFileList:XMLDocument;		var myCommentsList:XMLDocument;		/**/		var a:uint;		var c:uint;		var l:uint;		var current_mov:String;		var lastLiveAct:String;		var tipo:String;		var oldTipo:String;		////		var currLib:String;		var myLoader:URLLoader		var MyFile:FileReference;		var firstTime:Boolean = true;		public var goToSec:Number;		var now:Date;		//		var list:VJTVPostList;		var prev:ButtonTxt;		var succ:ButtonTxt;		var listSprites:Array;		public var listPulsa:Array;		var h:uint;		var listTit:Txt		var listN:uint;		public var myY;		var page;		var chiudi		var myTween:Tween;		var pages:Txt;		var button0:ButtonTxt;		var button1:ButtonTxt;		var button2:ButtonTxt;		var button3:ButtonTxt;		var button4:ButtonTxt;		var button5:ButtonTxt;		var button6:ButtonTxt;		var pulsWidth		var movMenu:Array		var canali		var imgLoader:Loader		var highLights:Sprite;		var listHighLights:Array;		var fondinocanali:MovieClip;		var commenti:VJTVComments;		public var api:JuveApi;		public var currentPage:int = 0		var listaSS;		var ssInt;		var n		var ssList		public function VJTVChCtrl(hh):void {			ch = 0;			list = new VJTVPostList(hh,myLoad,loaderLibStr);			this.addChild(list);			fondino = new Rett(0, 0, Preferences.pref.w, 100, 0xCCCCCC, -1, .7);			this.addChild(fondino);			/////// COLORS ///			fondinocanali = new FondinoCanali();			this.addChild(fondinocanali);			listPulsa = new Array();			pulsWidth = int((Preferences.pref.w-60-4-14)/5);			for (a=0; a<Preferences.pref.libraryList.childNodes[0].childNodes.length; a++) {				listPulsa.push(new Button());				listPulsa[a].x = (a ? listPulsa[a-1].x+listPulsa[a-1].width+50 : 50)				listPulsa[a].y = 3				listPulsa[a].avvia({fnz:paletteHideShow,txt:Preferences.pref.libraryList.childNodes[0].childNodes[a].attributes.m,param:a.toString()});				this.addChild(listPulsa[a]);			}			movMenu = ["INFO", "VOTI E COMMENTI"];			for (var b=0; b<movMenu.length; b++) {				listPulsa.push(new Button());				listPulsa[b+a].x = (b ? listPulsa[b+a-1].x+listPulsa[b+a-1].width+50 : 650)				listPulsa[b+a].y = 3				listPulsa[b+a].avvia({fnz:movMore,txt:movMenu[b],param:b.toString()});				this.addChild(listPulsa[b+a]);				listPulsa[b+a].disable();			}			chiudi = new Button();			chiudi.y = 3			chiudi.x = Preferences.pref.w-20			chiudi.avvia({fnz:Preferences.pref.interfaceTrgt.apriMenu,txt:"X",param:-1});			this.addChild(chiudi);			//			highLights = new Sprite();			this.addChild(highLights);			listHighLights = new Array();						commenti = new VJTVComments()			//			setPos();			myLoader = new URLLoader(new URLRequest(Preferences.pref.libraryList.childNodes[0].attributes.highLights));			myLoader.addEventListener("complete", highLightsEsito);			myLoader.addEventListener("ioError", highLightsEsito);		}		public function highLightsEsito(event:Event):void {			if (event.type == "complete") {				myFileList = new XMLDocument();				myFileList.ignoreWhite = true;				myFileList.parseXML(myLoader.data);				myLoader.removeEventListener("complete", highLightsEsito);				myLoader.removeEventListener("ioError", highLightsEsito);				Preferences.pref.interfaceTrgt.myloaded = true;				for (var a=0;a<3;a++){					listHighLights.push(new VJTVHighLightsItem(a*220, -400, 200, myLoadHi, Preferences.pref.interfaceTrgt.showInfo));					listHighLights[a].riempi(myFileList.childNodes[0].childNodes[a],a);					highLights.addChild(listHighLights[a]);				}			} else {				trace("errore")			}		}				function paletteHideShow(pp:String):void {			var newY			if (this.contains(highLights)) hideHighLights()			if (this.contains(list)) this.removeChild(list);			if (this.contains(commenti)) this.removeChild(commenti);			if (canali) if (this.contains(canali)) this.removeChild(canali);			var p = parseInt(pp);			if (p == 2) {				type = "canali";				newY = int(Preferences.pref.h-Preferences.pref.interfaceTrgt.myToolbar.piede.piedeEst.height-150);				if (Preferences.pref.interfaceTrgt.menuIsClose || newY!=myY) {					myY = newY;					Preferences.pref.interfaceTrgt.menuIsClose = true					Preferences.pref.interfaceTrgt.apriMenu(1)				}				canali = new FotoSlider(0,25,Preferences.pref.w,120,Preferences.pref.libraryList.childNodes[0].childNodes[parseInt(pp)], loaderCanale)				this.addChild(canali);			} else {				type = "list";				loaderLib(pp);			}			for (var a=0; a<3; a++) {				if (listPulsa[a].param!=pp) {					listPulsa[a].enable()				} else {					listPulsa[a].disable()				}			}		}		function movMore(pp:String):void {			var p = parseInt(pp);			trace("movMore "+p);			switch(p) {				case 0:				Preferences.pref.interfaceTrgt.showInfo(myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia],Preferences.pref.currentMedia);				trace ("INFO");				break;				case 1:				/*trace ("VIDEO CORRELATI");				trace ("playlists/movMore.php?k="+myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id);				listTit.text = movMenu[p]				loaderLibStr("playlists/movMore.php?k="+myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id);				break;				case 2:				trace ("CONDIVIDI");				trace ("playlists/movMore.php?k="+myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id);				Preferences.pref.interfaceTrgt.myToolbar.apriEmbed(null)				break;				case 3:*/				trace ("VOTI E COMMENTI");				pager(1,10)				//trace ("playlists/movMore.php?k="+myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id);				//type = "commenti";				if (this.contains(list)) this.removeChild(list);				if (this.contains(commenti)) this.removeChild(commenti);				if (canali) if (this.contains(canali)) this.removeChild(canali);				var newY = int(Preferences.pref.h-Preferences.pref.interfaceTrgt.myToolbar.piede.piedeEst.height-Preferences.pref.listHeight);				if (Preferences.pref.interfaceTrgt.menuIsClose || newY!=myY) {					myY = newY;					Preferences.pref.interfaceTrgt.menuIsClose = true					Preferences.pref.interfaceTrgt.apriMenu(1)				}/*				//listTit.text = movMenu[p]				trace("commenti" + myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id);				loaderLibStr(myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.comments);*/				break;			}		}		public function pager(p,last_page):void {			if ((p>0 && currentPage+p <= last_page) || (p<0 && currentPage+p>0)) {				trace("currentPagecurrentPagecurrentPage "+currentPage)				currentPage = (p>0 && currentPage+p <= last_page ? currentPage+p : (currentPage+p > 0 ? currentPage+p : currentPage))				api = new JuveApi(getComment, Preferences.pref.sessionId, true);				api.setAction("videoPlayerContentCommentGet");				trace("videoPlayerContentCommentGet ID:"+myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id)				api.addParam("content_id", myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id);				api.addParam("limit", 5);				trace("currentPagecurrentPagecurrentPage "+currentPage)				api.addParam("page", currentPage);				api.run();			}		}		public function getComment(e):void {			if (!this.contains(commenti)) this.addChild(commenti)			commenti.updatePage(e,myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia])		}		function loaderCanale(b:String):void {			if (this.contains(canali)) this.removeChild(canali);			if (this.contains(list)) this.removeChild(list);			if (this.contains(commenti)) this.removeChild(commenti);			loaderLibStr(b);		}		function loaderLibStr(b:String):void {			var newY = int(Preferences.pref.h-Preferences.pref.interfaceTrgt.myToolbar.piede.piedeEst.height-Preferences.pref.listHeight);			if (Preferences.pref.interfaceTrgt.menuIsClose || newY!=myY) {				myY = newY;				Preferences.pref.interfaceTrgt.menuIsClose = true				Preferences.pref.interfaceTrgt.apriMenu(1)			}			trace((b));			myLoader = new URLLoader(new URLRequest(b));			myLoader.addEventListener("complete", loadLibEsito);			myLoader.addEventListener("ioError", loadLibEsito);		}		function loaderLib(b:String):void {			Preferences.pref.interfaceTrgt.startLoading();			Preferences.pref.interfaceTrgt.myloaded = false;			loaderLibStr(Preferences.pref.libraryList.childNodes[0].childNodes[parseInt(b)].attributes.val);		}		public function loadLibEsito(event:Event):void {			if (event.type == "complete") {				Preferences.pref.interfaceTrgt.myloaded = true;				Preferences.pref.interfaceTrgt.stopLoading();				/*if (type == "commenti") {					myCommentsList = new XMLDocument();					myCommentsList.ignoreWhite = true;					myCommentsList.parseXML(myLoader.data);					if (!this.contains(commenti)) this.addChild(commenti)					commenti.updatePage(myCommentsList,myFileList.childNodes[0].childNodes[Preferences.pref.currentMedia].attributes.id);				} else {*/					myFileList = new XMLDocument();					myFileList.ignoreWhite = true;					//myFileList.parseXML(myLoader.data);					myFileList.parseXML(Preferences.myReplace(myLoader.data,"exclusive-player-playlist-photo-gallery?","exclusive-player-playlist-photo-gallery/index.php?"));					if (!this.contains(list)) this.addChild(list)					list.updatePage(myFileList);				//}			} else {				trace("errore");			}		}		function removeHighLights(e:Event) {			this.removeChild(highLights);		}		function hideHighLights() {			myTween = new Tween(highLights,"alpha",Strong.easeOut,highLights.alpha,0,2,true);			myTween.addEventListener(TweenEvent.MOTION_FINISH, removeHighLights);		}		function myLoadHi(a):void {			hideHighLights()			Preferences.pref.interfaceTrgt.firstPlay = true;			Preferences.pref.currentMedia = a;			myLoadMovieMore(myFileList.childNodes[0].childNodes[a].childNodes[0].childNodes[0],myFileList.childNodes[0].childNodes[a].childNodes[0].childNodes[0]);		}		function myLoad(a):void {			Preferences.pref.interfaceTrgt.firstPlay = true;			Preferences.pref.currentMedia = a;			Preferences.pref.currentMov = myFileList.childNodes[0].childNodes[a].childNodes[0].childNodes[0].toString();			myLoadMovieMore(myFileList.childNodes[0].childNodes[a].childNodes[0].childNodes[0],myFileList.childNodes[0].childNodes[a].childNodes[0].childNodes[0]);			list.updatePage(myFileList)		}		function myLoadMovie(a:String,p:String):void {			Preferences.pref.nLoadErr["ch_"+ch] = 0;			myLoadMovieMore(a,p);		}		public function myLoadMovieMore(a:String,p:String):void {			//p = "http://www.juventusmember.com/exclusive-player-playlist-photo.php?type=featured";			p = Preferences.myReplace(p,"exclusive-player-playlist-photo-gallery?","exclusive-player-playlist-photo-gallery/index.php?");			trace("myLoadMovieMore"+p)			Preferences.pref.monitorTrgt.myStarted = Preferences.pref.monitorTrgt.myloaded = false;			if (p.indexOf("/") == -1) {				p = myPath+p;			}			current_mov = p;			tipo = p.substring(p.length-3, p.length).toLowerCase();			trace(tipo);			if (p.indexOf(".php?") != -1) {				mySSLoader = new URLLoader(new URLRequest(current_mov));				mySSLoader.addEventListener("complete", ssEsito);				mySSLoader.addEventListener("ioError", ssEsito);			} else if (tipo == "txt") {				this.tipo = "swf";				this.myTxtEditor.myTxtLoader.load(new URLRequest(this.current_mov));			} else {				if (tipo == "flv" || tipo == "avi" || tipo == "mov" || tipo == "mpg" || tipo == "mp4" || tipo == "m4v") {					tipo = "flv";					lastLiveAct = ",loadFlv,"+ch+","+current_mov+","+tipo+","+100;				} else if (tipo == "mp3") {					lastLiveAct = ",loadMp3,"+ch+","+current_mov+","+tipo+","+100;				} else {					tipo = "swf";					lastLiveAct = ",loadMedia,"+ch+","+current_mov+","+tipo+","+100;				}				trace("VJTVch")				Preferences.pref.monitorTrgt.mbuto((getTimer()-Preferences.pref.lastTime)+lastLiveAct);			}			oldTipo = tipo;			Preferences.pref.interfaceTrgt.startLoading();			var a = 3;			//for (var b=0; b<movMenu.length; b++) {			for (var b=0; b<1; b++) {				trace("myLoadMovieMore"+b)				listPulsa[b+3].enable();				listPulsa[b+4].enable();			}		}		public function ssEsito(event:Event):void {			if (event.type == "complete") {				Preferences.pref.interfaceTrgt.myloaded = true;				Preferences.pref.interfaceTrgt.stopLoading();				trace("ssEsito");				ssList = new XMLDocument();				ssList.ignoreWhite = true;				ssList.parseXML(Preferences.myReplace(mySSLoader.data,"exclusive-player-playlist-photo-gallery?","exclusive-player-playlist-photo-gallery/index.php?"));				trace("ssEsito "+Preferences.myReplace(mySSLoader.data,"exclusive-player-playlist-photo-gallery?","exclusive-player-playlist-photo-gallery/index.php?"));				generaListaSS();				n = 0;				load_foto()			} else {				trace("errore");			}		}		function generaListaSS() {			listaSS = new Array();			for (var a = 0; a<ssList.childNodes[0].childNodes.length; a++) {				var tmp = ssList.childNodes[0].childNodes[a].childNodes[0].childNodes[0].toString();				tmp = tmp.substring(tmp.length-3, tmp.length).toLowerCase();				if (tmp == "jpg" || tmp == "png" || tmp == "gif") {					listaSS.push(a);				}			}		}		public function load_foto() {			trace("load_foto")			Preferences.pref.interfaceTrgt.myToolbar.disable()			clearInterval(this.ssInt);			/*trace("load_foto");			trace("load_foto1"+listaSS);			trace("load_foto2"+n);*/			//setLink(ssList.childNodes[0].childNodes[listaSS[n]].attributes.page_url);			trace("load_foto"+ssList.childNodes[0].childNodes[listaSS[n]])			var tmp = ssList.childNodes[0].childNodes[listaSS[n]].childNodes[0].childNodes[0].toString();			trace(n+" load_foto2 "+tmp);			if (tmp.lastIndexOf("cnt=") != -1) {				tmp = tmp.substring(tmp.lastIndexOf("cnt=")+4, tmp.length);			}			currMov = tmp;			Preferences.pref.monitorTrgt.mbuto(getTimer()+",loadImg,0,"+currMov+","+Preferences.pref.tipo+","+(Preferences.pref.interfaceTrgt.myToolbar.piede.volume_ctrl.getVal()*100));			/*			if (ssList.childNodes[0].childNodes.length>1) {				//Preferences.pref.interfaceTrgt.myToolbar.tit = (n+1)+" / "+listaSS.length+" - "+ssList.childNodes[0].childNodes[listaSS[n]].childNodes[1].childNodes[0].childNodes[0].toString();				Preferences.pref.interfaceTrgt.myToolbar.tit = ssList.childNodes[0].childNodes[listaSS[n]].childNodes[1].childNodes[0].childNodes[0].toString();				Preferences.pref.interfaceTrgt.myToolbar.piede.counter.lab.htmlText = (n+1)+" / "+listaSS.length;				Preferences.pref.interfaceTrgt.myToolbar.piede.indice.curs.x = (((Preferences.pref.interfaceTrgt.myToolbar.barr_width)/(listaSS.length-1))*n);				l++;			} else {				Preferences.pref.interfaceTrgt.myToolbar.piede.counter.lab.htmlText = (n+1)+" / "+listaSS.length;				Preferences.pref.interfaceTrgt.myToolbar.tit = ssList.childNodes[0].childNodes[listaSS[n]].childNodes[1].childNodes[0].childNodes[0].toString();			}			Preferences.pref.interfaceTrgt.myToolbar.testa.lab_i.htmlText = Preferences.pref.interfaceTrgt.myToolbar.tit;			*/		}		public function initHandlerJPG() {		if (listaSS) {			clearInterval(this.ssInt);			if (listaSS.length>1) {				if (n>listaSS.length-2) {						n = 0;						this.ssInt = setInterval(loadNext, Preferences.pref.ss_time);					/*if (Preferences.pref.myLoop) {						n = 0;						this.ssInt = setInterval(loadNext, Preferences.pref.ss_time);					} else {						if (Preferences.pref.endpPath) {							//Preferences.pref.interfaceTrgt.loadFooter();							this.myPlayer.myStopStatus = true;							n = 0;							this.ssInt = setInterval(Preferences.pref.interfaceTrgt.loadFooter, Preferences.pref.ss_time);						} else {							this.ssInt = setInterval(avviaSelector, Preferences.pref.ss_time);						}					}*/				} else {					n++;					this.ssInt = setInterval(loadNext, Preferences.pref.ss_time);				}				Preferences.pref.interfaceTrgt.myToolbar.enable()				Preferences.pref.interfaceTrgt.myToolbar.piede.indice.curs.disable()			}		}		}		function loadNext() {			load_foto();			/*if (Preferences.pref.tipo == "jpg" && listaSS.length>0 && !Preferences.pref.monitorTrgt.myPlayer.myStopStatus) {			}*/		}		function load_url(a:String):void {			var tmp:String = Preferences.myReplace(current_mov,myPath,"");			myLoadMovie(tmp,tmp);		}		public function loadErr():void {			trace("FILE NOT FOUND")			/*myMovie.text = "FILE NOT FOUND";			myMovie.textColor = 0xFF0000;			myMovie.setSelection(0, 0);*/		}		public function setPos():void {			var hh = Preferences.pref.listHeight;			x = 0;			h = int(int((hh-60)/110)*110)-10+60;			//pages.y = succ.y = prev.y = h-3;			myY = int(Preferences.pref.h-Preferences.pref.interfaceTrgt.myToolbar.piede.piedeEst.height-Preferences.pref.listHeight);			if (Preferences.pref.interfaceTrgt.menuIsClose) {				y = Preferences.pref.h-Preferences.pref.interfaceTrgt.myToolbar.piede.piedeEst.height-30;			} else {				y = myY;			}			if (this.contains(highLights)) highLights.x = int((Preferences.pref.w-640)/2)			//listN = int((hh-60)/110)*2;			fondino.height = Preferences.pref.listHeight;			/*trace("OOOOOOOO "+h)			var a			var oldListSprites = listSprites.length;			var listWidth = int((Preferences.pref.w-30)/2);			var listPos = [[0,0],[0,1],[1,0],[1,1]];			if (listN>oldListSprites) {				for (a=oldListSprites;a<listN;a++){					listSprites.push(new VJTVListItem((listPos[a][0]*(listWidth+10))+10, (listPos[a][1]*110)+55, listWidth, myLoad, Preferences.pref.interfaceTrgt.showInfo,loaderLibStr));					cnt.addChild(listSprites[a]);				}			} else if (listN<oldListSprites) {				trace("rimuovi"+oldListSprites)				trace("rimuovi"+listN)				for (a=oldListSprites-1;a>=listN;a--){					trace("rimuovi->"+a)					cnt.removeChild(listSprites[a]);					listSprites.pop();				}			}			if (myFileList is XMLDocument) setPage()*/		}	}}