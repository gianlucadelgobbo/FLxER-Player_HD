package VJTV {	import flash.display.Sprite;	import flash.display.Loader;	import flash.events.*;	import flash.net.URLRequest;	import FLxER.main.Rett;	import FLxER.main.Txt;	import FLxER.comp.ButtonTxt;	public class VJTVDett extends Sprite {		public var tit,dat,dur,aut,txt,cat,tag		var fondino,imgLoader, fnz,fnzCanal,n,img,loadingProgress,myXml,chiudi		public function VJTVDett(f,ff):void {			fnzMore = f;			fnzCanal = ff;			w = 700;			fondino = new Rett(0, 0, w, 140, 0x000000, 0x666666, 1);			this.addChild(fondino);			tit = new Txt(175, 10, 500, 0, "", Preferences.pref.th, "");			this.addChild(tit);			chiudi = new ButtonTxt(w-14, 2, 13, 14, "X", hideInfo, -1, null);			this.addChild(chiudi);			dat = new Txt(177, 21, 450, 20, "", Preferences.pref.ts, "");			this.addChild(dat);			dat.alpha = .7;			dur = new Txt(408, 21, 100, 20, "", Preferences.pref.ts, "");			this.addChild(dur);			dur.addEventListener(TextEvent.LINK, linkEvent);			txt = new Txt(177, 54, 510, 40, "", Preferences.pref.ts, "");			txt.wordWrap = true;			this.addChild(txt);			this.img = new Sprite();			img.x=img.y=10;			this.addChild(img);			//var fond = new Rett(0, 0, 128, 96, 0xCCCCCC, -1, .5);			//img.addChild(fond);			download = new ButtonTxt(140, 82, 76, 14, "DOWNLOAD", downloadFnz, "", null);			download.x = w-2-download.width			this.addChild(download);			this.imgLoader = new Loader();			imgLoader.contentLoaderInfo.addEventListener(Event.INIT, initHandlerSWF);			imgLoader.contentLoaderInfo.addEventListener(SecurityErrorEvent.SECURITY_ERROR, errorHandlerSWF);			imgLoader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, errorHandlerSWF);			img.addChild(imgLoader);		}		public function linkEvent(event:TextEvent):void {			trace("linkEvent"+event.text)			fnzCanal(event.text); // Link Clicked		}		public function downloadFnz(a):void {			trace(downLink)			navigateToURL(new URLRequest(downLink));		}		public function hideInfo(a):void {			fnzMore(myXml,n);		}		public function riempi(xml,nn):void {			n = nn;			myXml = xml;			/*			fondino.alpha = (n == Preferences.pref.currentMedia ? 0 : 1);			var myDateA = myXml.childNodes[1].childNodes[1].nodeValue.split(",");			var myDate = new Date(myDateA[0],myDateA[1],myDateA[2],myDateA[3],myDateA[4],myDateA[5]);			trace("dat "+myDate.getFullYear()+"-"+putZero(myDate.getMonth()+1)+"-"+putZero(myDate.getDate())+" "+putZero(myDate.getHours())+":"+putZero(myDate.getMinutes()));			dat.htmlText = myDate.getFullYear()+"-"+putZero(myDate.getMonth()+1)+"-"+putZero(myDate.getDate())+" "+putZero(myDate.getHours())+":"+putZero(myDate.getMinutes());			*/			/*			trace("img "+myXml.childNodes[2].childNodes[0])			trace("tit "+myXml.childNodes[1].childNodes[0])			trace("dat "+myXml.childNodes[1].childNodes[1].childNodes[0]);			trace("dur "+Preferences.pref.interfaceTrgt.myTime(myXml.childNodes[1].childNodes[2].childNodes[0]));			trace("aut "+myXml.childNodes[1].childNodes[4].childNodes[0])			trace("cat "+myXml.childNodes[1].childNodes[5].childNodes[0])			trace("tag "+myXml.childNodes[1].childNodes[6].childNodes[0])			trace(this.tit)			*/			tit.htmlText = myXml.childNodes[1].childNodes[0].childNodes[0].toString();			dat.htmlText = myXml.childNodes[1].childNodes[4].childNodes[0].toString();			dur.htmlText = Preferences.myReplace(myXml.childNodes[1].childNodes[5].childNodes[0].toString(),"href=\"","href=\"event:");			txt.htmlText = myXml.childNodes[1].childNodes[3].childNodes[0].toString();			downLink = myXml.childNodes[1].childNodes[6].childNodes[0]			if (downLink) {				download.visible = true			} else {				download.visible = false			}			setPos();			imgLoader.load(new URLRequest(myXml.childNodes[2].childNodes[0].toString()));			loadingProgress = true;			//tag.htmlText = myXml.childNodes[3].childNodes[0];		}		public function setPos():void {			trace(imgLoader.width)			if (imgLoader.width) {				imgLoader.width = 158;				imgLoader.scaleY = imgLoader.scaleX 			}			tit.height = tit.textHeight + 4;			dat.y = dur.y = tit.height+tit.y+(tit.height > 40 ? -5 : 0);			txt.y = dat.y+20;			txt.height = txt.textHeight			fondino.height = txt.height+txt.y+10			download.y = fondino.height-20			if (fondino.height < 140) fondino.height = 140;			dur.x = w-12-dur.textWidth			this.y=(Preferences.pref.h-fondino.height)/2			this.x=(Preferences.pref.w-fondino.width)/2		}		public function svuota():void {			fondino.alpha = 1;			tit.htmlText = dat.htmlText = dur.htmlText = txt.htmlText = "";			if (loadingProgress) {				imgLoader.close();			} else {				imgLoader.unload();			}		}		private function putZero(str):String {			return (str.toString().length < 2 ? "0"+str : str);		}		private function mouseDownHandler(event:Event):void {			fnz(n);		}		private function mouseOverHandler(event:Event):void {			img.alpha = .5;		}		private function mouseOutHandler(event:Event):void {			img.alpha = 1;		}		private function initHandlerSWF(event:Event):void {			setPos();			loadingProgress = false;			enable()		}		private function errorHandlerSWF(event:Event):void {			trace("error "+event)		}		public function enable() {			img.mouseChildren = false;			img.addEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			img.addEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			img.addEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			img.buttonMode=true;		}		public function disable() {			img.removeEventListener(MouseEvent.MOUSE_DOWN,mouseDownHandler);			img.removeEventListener(MouseEvent.MOUSE_OVER,mouseOverHandler);			img.removeEventListener(MouseEvent.MOUSE_OUT,mouseOutHandler);			img.buttonMode=false;			mouseOutHandler(null);		}	}}