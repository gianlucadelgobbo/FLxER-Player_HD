package VJTV {	import flash.display.MovieClip;	import flash.display.StageAlign;    import flash.display.StageScaleMode;	import flash.xml.XMLDocument;	import flash.events.*;	import flash.utils.*;	import flash.net.SharedObject;	import flash.net.LocalConnection;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.display.Loader;	import flash.external.ExternalInterface;	import flash.system.fscommand;	//	import FLxER.core.Monitor;	import FLxER.panels.Mess;	import FLxER.panels.PrefOption;	import FLxER.main.Rett;	import FLxER.comp.Alt;	import VJTV.VJTVOptions;	import VJTV.VJTVLoading;	import VJTV.VJTVMonitor;	import VJTV.VJTVInterface;	import tbtv.juventusmember.JuveApi;	public class VJTVStarter extends MovieClip {		public var monitor					:VJTVMonitor;		public var flxerInterface			:VJTVInterface;		public var myAlt					:Alt;		public var myPrefSO					:SharedObject;		//		var myOptions						:VJTVOptions;		var myAlert							:Mess;		var myPrefOption					:PrefOption;		var myLoader						:URLLoader		var myLoading						:VJTVLoading		// valore di sessione LEGGERLA DAI PARAMS DELLA PAGINA		var sessionId = "3a1d15e2eebd4503a855cdce5377d788";						public function VJTVStarter() {			stage.showDefaultContextMenu = false;			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			fscommand("trapallkeys", true);			Preferences.createPref(stage.stageWidth,stage.stageHeight);			Preferences.pref.lastTime = 0;			Preferences.pref.fs = false;			Preferences.pref.vKS = true;			Preferences.pref.nCh = 3;			Preferences.pref.w = stage.stageWidth;			Preferences.pref.h = stage.stageHeight;			//myLoader = new URLLoader(new URLRequest("playlists/index.xml"));			myLoader = new URLLoader(new URLRequest("http://www.juventusmember.com/playlists/index-photo.php"));			myLoader.addEventListener("complete", startup);			myLoader.addEventListener("ioError", xmlNotLoaded);			Preferences.pref.sessionId = (root.loaderInfo.parameters.u ? root.loaderInfo.parameters.u : sessionId);			var api:JuveApi = new JuveApi(setUserId, Preferences.pref.sessionId);			api.setAction("session_get");			api.run();						/*			var apiEchoParams:JuveApi = new JuveApi(echoParams, sessionId);			apiEchoParams.setAction("videoPlayerContentGet");			apiEchoParams.addParam("category_id", "1");			apiEchoParams.addParam("type_id", "1");			apiEchoParams.addParam("limit", "100");			apiEchoParams.run();*/		}		/*********************************************************************			Ottenere le informazioni sulla sessione		**********************************************************************/		function setUserId(e):void {			trace("========"+e);			Preferences.pref.userId = e.message.lang.id;			var api:JuveApi = new JuveApi(setUserInfo, Preferences.pref.sessionId);			api.setAction("videoPlayerUserGet");			api.addParam("id", Preferences.pref.userId);			api.run();			/*			trace("========"+e.message.lang.id);			for(var obj in e) {			}*/		}		/*********************************************************************			Passaggio dei parametri. La risposta contiene i parametri passati		**********************************************************************/		function setUserInfo(e):void {			Preferences.pref.userImg_small = e.message.rows["0"].img_small;			Preferences.pref.userName = e.message.rows["0"].user_name;		}								function xmlNotLoaded(event:Event):void {			trace("Data not loaded."+event);		}		public function startup(event:Event) {			Preferences.pref.libraryList = new XMLDocument();			Preferences.pref.libraryList.ignoreWhite = true;			Preferences.pref.libraryList.parseXML(myLoader.data);			interfaceDrawer()			stage.addEventListener(Event.RESIZE, resizer);		}		public function resizer(event:Event) {			Preferences.pref.w = stage.stageWidth;			Preferences.pref.h = stage.stageHeight;			Preferences.pref.monitorTrgt.resizer(stage.stageWidth,stage.stageHeight);			Preferences.pref.interfaceTrgt.setPos()		}		function interfaceDrawer() {			//this.removeChildAt(0);			this.myAlt  = new Alt();			Preferences.pref.myAlt = this.myAlt;			Preferences.pref.ch = 0;			monitor = new VJTVMonitor(0,0,Preferences.pref.w, Preferences.pref.h);			flxerInterface = new VJTVInterface();			this.addChild(monitor);			this.addChild(flxerInterface);			this.addChild(myAlt);			if (Preferences.pref.vKS) {			}		}		public static function myReplace(str, search, replace) {			var temparray = str.split(search);			str = temparray.join(replace);			return str;		}	}}